==4401== Memcheck, a memory error detector
==4401== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==4401== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==4401== Command: ./test
==4401== 
==4401== 
==4401== HEAP SUMMARY:
==4401==     in use at exit: 38 bytes in 1 blocks
==4401==   total heap usage: 2 allocs, 1 frees, 54 bytes allocated
==4401== 
==4401== 38 bytes in 1 blocks are definitely lost in loss record 1 of 1
==4401==    at 0x4C2C3FB: operator new(unsigned long) (vg_replace_malloc.c:319)
==4401==    by 0x4EF0108: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17)
==4401==    by 0x4EF0302: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17)
==4401==    by 0x4EF049B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17)
==4401==    by 0x4009FA: D1::D1() (test.cpp:16)
==4401==    by 0x40093B: mem_leak_test() (test.cpp:27)
==4401==    by 0x400980: main (test.cpp:35)
==4401== 
==4401== LEAK SUMMARY:
==4401==    definitely lost: 38 bytes in 1 blocks
==4401==    indirectly lost: 0 bytes in 0 blocks
==4401==      possibly lost: 0 bytes in 0 blocks
==4401==    still reachable: 0 bytes in 0 blocks
==4401==         suppressed: 0 bytes in 0 blocks
==4401== 
==4401== For counts of detected and suppressed errors, rerun with: -v
==4401== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)
